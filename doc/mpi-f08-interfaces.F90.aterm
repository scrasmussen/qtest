OfpProgram(
  None()
, [ OfpModule(
      "mpi_f08_interfaces"
    , OfpScope(
        OfpSpecPart(
          [ InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Bsend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Bsend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Bsend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Bsend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Bsend_init", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Bsend_init_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Bsend_init_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Bsend_init", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Buffer_attach", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Buffer_attach_f08"
                  , ["buffer", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buffer", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Buffer_attach_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Buffer_attach", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Buffer_detach", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Buffer_detach_f08"
                  , ["buffer_addr", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buffer_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Buffer_detach_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Buffer_detach", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cancel", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cancel_f08"
                  , ["request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cancel_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cancel", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_count", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_count_f08"
                  , ["status", "datatype", "count", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(IN())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_count_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_count", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ibsend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ibsend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ibsend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ibsend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iprobe", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iprobe_f08"
                  , ["source", "tag", "comm", "flag", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(OUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iprobe_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iprobe", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Irecv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Irecv_f08"
                  , ["buf", "count", "datatype", "source", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Irecv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Irecv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Irsend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Irsend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Irsend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Irsend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Isend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Isend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Isend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Isend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Issend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Issend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Issend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Issend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Probe", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Probe_f08"
                  , ["source", "tag", "comm", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(OUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Probe_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Probe", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Recv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Recv_f08"
                  , ["buf", "count", "datatype", "source", "tag", "comm", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Recv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Recv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Recv_init", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Recv_init_f08"
                  , ["buf", "count", "datatype", "source", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Recv_init_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Recv_init", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Request_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Request_free_f08"
                  , ["request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Request_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Request_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Request_get_status", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Request_get_status_f08"
                  , ["request", "flag", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Request_get_status_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Request_get_status", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Rsend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Rsend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Rsend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Rsend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Rsend_init", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Rsend_init_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Rsend_init_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Rsend_init", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Send", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Send_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Send_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Send", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Sendrecv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Sendrecv_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "dest"
                    , "sendtag"
                    , "recvbuf"
                    , "recvcount"
                    , "recvtype"
                    , "source"
                    , "recvtag"
                    , "comm"
                    , "status"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("sendtag", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Sendrecv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Sendrecv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Sendrecv_replace", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Sendrecv_replace_f08"
                  , [ "buf"
                    , "count"
                    , "datatype"
                    , "dest"
                    , "sendtag"
                    , "source"
                    , "recvtag"
                    , "comm"
                    , "status"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("sendtag", [], [], no-char-length(), no-init())
                        , EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Sendrecv_replace_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Sendrecv_replace", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Send_init", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Send_init_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Send_init_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Send_init", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ssend", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ssend_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ssend_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ssend", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ssend_init", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ssend_init_f08"
                  , ["buf", "count", "datatype", "dest", "tag", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("dest", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ssend_init_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ssend_init", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Start", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Start_f08"
                  , ["request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Start_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Start", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Startall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Startall_f08"
                  , ["count", "array_of_requests", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Startall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Startall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Test", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Test_f08"
                  , ["request", "flag", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Test_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Test", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Testall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Testall_f08"
                  , ["count", "array_of_requests", "flag", "array_of_statuses", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("array_of_statuses", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Testall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Testall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Testany", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Testany_f08"
                  , ["count", "array_of_requests", "index", "flag", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("index", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Testany_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Testany", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Testsome", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Testsome_f08"
                  , ["incount", "array_of_requests", "outcount", "array_of_indices", "array_of_statuses", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("incount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("incount"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("outcount", [], [], no-char-length(), no-init())
                        , EntityDecl("array_of_indices", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("array_of_statuses", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Testsome_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Testsome", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Test_cancelled", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Test_cancelled_f08"
                  , ["status", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(IN())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Test_cancelled_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Test_cancelled", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Wait", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Wait_f08"
                  , ["request", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Wait_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Wait", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Waitall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Waitall_f08"
                  , ["count", "array_of_requests", "array_of_statuses", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("array_of_statuses", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Waitall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Waitall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Waitany", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Waitany_f08"
                  , ["count", "array_of_requests", "index", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("index", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Waitany_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Waitany", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Waitsome", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Waitsome_f08"
                  , ["incount", "array_of_requests", "outcount", "array_of_indices", "array_of_statuses", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("incount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "array_of_requests"
                          , [DimSpec(no-lower-bound(), VarRef("incount"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("outcount", [], [], no-char-length(), no-init())
                        , EntityDecl("array_of_indices", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("array_of_statuses", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Waitsome_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Waitsome", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_address", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_address_f08"
                  , ["location", "address", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("location", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("address", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_address_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_address", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_elements", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_elements_f08"
                  , ["status", "datatype", "count", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(IN())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_elements_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_elements", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_elements_x", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_elements_x_f08"
                  , ["status", "datatype", "count", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status", "MPI_Datatype", "MPI_COUNT_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(IN())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_COUNT_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_elements_x_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_elements_x", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Pack", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Pack_f08"
                  , ["inbuf", "incount", "datatype", "outbuf", "outsize", "position", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("inbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("outbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("incount", [], [], no-char-length(), no-init())
                        , EntityDecl("outsize", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(INOUT())]
                      , [EntityDecl("position", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Pack_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Pack", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Pack_external", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Pack_external_f08"
                  , ["datarep", "inbuf", "incount", "datatype", "outbuf", "outsize", "position", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("datarep", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("inbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("outbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("incount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("outsize", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(INOUT())]
                      , [EntityDecl("position", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Pack_external_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Pack_external", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Pack_external_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Pack_external_size_f08"
                  , ["datarep", "incount", "datatype", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("incount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("datarep", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Pack_external_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Pack_external_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Pack_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Pack_size_f08"
                  , ["incount", "datatype", "comm", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("incount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Pack_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Pack_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_commit", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_commit_f08"
                  , ["datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_commit_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_commit", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_contiguous", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_contiguous_f08"
                  , ["count", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_contiguous_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_contiguous", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_darray", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_darray_f08"
                  , [ "size"
                    , "rank"
                    , "ndims"
                    , "array_of_gsizes"
                    , "array_of_distribs"
                    , "array_of_dargs"
                    , "array_of_psizes"
                    , "order"
                    , "oldtype"
                    , "newtype"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("size", [], [], no-char-length(), no-init())
                        , EntityDecl("rank", [], [], no-char-length(), no-init())
                        , EntityDecl("ndims", [], [], no-char-length(), no-init())
                        , EntityDecl("order", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_gsizes"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "array_of_distribs"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_dargs"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "array_of_psizes"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_darray_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_darray", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_hindexed", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_hindexed_f08"
                  , ["count", "array_of_blocklengths", "array_of_displacements", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_blocklengths"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_displacements"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_hindexed_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_hindexed", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_hvector", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_hvector_f08"
                  , ["count", "blocklength", "stride", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("blocklength", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("stride", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_hvector_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_hvector", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_indexed_block", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_indexed_block_f08"
                  , ["count", "blocklength", "array_of_displacements", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("blocklength", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_displacements"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_indexed_block_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_indexed_block", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_hindexed_block", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_hindexed_block_f08"
                  , ["count", "blocklength", "array_of_displacements", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("blocklength", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_displacements"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_hindexed_block_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_hindexed_block", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_resized", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_resized_f08"
                  , ["oldtype", "lb", "extent", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [ EntityDecl("lb", [], [], no-char-length(), no-init())
                        , EntityDecl("extent", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_resized_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_resized", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_struct", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_struct_f08"
                  , ["count", "array_of_blocklengths", "array_of_displacements", "array_of_types", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_blocklengths"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_displacements"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_types"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_struct_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_struct", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_subarray", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_subarray_f08"
                  , ["ndims", "array_of_sizes", "array_of_subsizes", "array_of_starts", "order", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("ndims", [], [], no-char-length(), no-init())
                        , EntityDecl("order", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_sizes"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "array_of_subsizes"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_starts"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_subarray_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_subarray", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_dup", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_dup_f08"
                  , ["oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_dup_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_dup", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_free_f08"
                  , ["datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_contents", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_contents_f08"
                  , ["datatype", "max_integers", "max_addresses", "max_datatypes", "array_of_integers", "array_of_addresses", "array_of_datatypes", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("max_integers", [], [], no-char-length(), no-init())
                        , EntityDecl("max_addresses", [], [], no-char-length(), no-init())
                        , EntityDecl("max_datatypes", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "array_of_integers"
                          , [DimSpec(no-lower-bound(), VarRef("max_integers"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "array_of_addresses"
                          , [DimSpec(no-lower-bound(), VarRef("max_addresses"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "array_of_datatypes"
                          , [DimSpec(no-lower-bound(), VarRef("max_datatypes"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_contents_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_contents", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_envelope", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_envelope_f08"
                  , ["datatype", "num_integers", "num_addresses", "num_datatypes", "combiner", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("num_integers", [], [], no-char-length(), no-init())
                        , EntityDecl("num_addresses", [], [], no-char-length(), no-init())
                        , EntityDecl("num_datatypes", [], [], no-char-length(), no-init())
                        , EntityDecl("combiner", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_envelope_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_envelope", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_extent", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_extent_f08"
                  , ["datatype", "lb", "extent", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [ EntityDecl("lb", [], [], no-char-length(), no-init())
                        , EntityDecl("extent", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_extent_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_extent", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_extent_x", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_extent_x_f08"
                  , ["datatype", "lb", "extent", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND", "MPI_COUNT_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_COUNT_KIND"))))
                      , [Intent(OUT())]
                      , [ EntityDecl("lb", [], [], no-char-length(), no-init())
                        , EntityDecl("extent", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_extent_x_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_extent_x", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_true_extent", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_true_extent_f08"
                  , ["datatype", "true_lb", "true_extent", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [ EntityDecl("true_lb", [], [], no-char-length(), no-init())
                        , EntityDecl("true_extent", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_true_extent_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_true_extent", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_true_extent_x", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_true_extent_x_f08"
                  , ["datatype", "true_lb", "true_extent", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND", "MPI_COUNT_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_COUNT_KIND"))))
                      , [Intent(OUT())]
                      , [ EntityDecl("true_lb", [], [], no-char-length(), no-init())
                        , EntityDecl("true_extent", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_true_extent_x_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_true_extent_x", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_indexed", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_indexed_f08"
                  , ["count", "array_of_blocklengths", "array_of_displacements", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "array_of_blocklengths"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "array_of_displacements"
                          , [DimSpec(no-lower-bound(), VarRef("count"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_indexed_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_indexed", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_size_f08"
                  , ["datatype", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_size_x", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_size_x_f08"
                  , ["datatype", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_COUNT_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_COUNT_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_size_x_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_size_x", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_vector", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_vector_f08"
                  , ["count", "blocklength", "stride", "oldtype", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("blocklength", [], [], no-char-length(), no-init())
                        , EntityDecl("stride", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("oldtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_vector_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_vector", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Unpack", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Unpack_f08"
                  , ["inbuf", "insize", "position", "outbuf", "outcount", "datatype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("inbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("outbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("insize", [], [], no-char-length(), no-init())
                        , EntityDecl("outcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(INOUT())]
                      , [EntityDecl("position", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Unpack_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Unpack", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Unpack_external", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Unpack_external_f08"
                  , ["datarep", "inbuf", "insize", "position", "outbuf", "outcount", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("datarep", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("inbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("outbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("insize", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(INOUT())]
                      , [EntityDecl("position", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("outcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Unpack_external_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Unpack_external", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Allgather", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Allgather_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Allgather_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Allgather", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iallgather", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iallgather_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iallgather_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iallgather", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Allgatherv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Allgatherv_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcounts", "displs", "recvtype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("sendcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Allgatherv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Allgatherv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iallgatherv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iallgatherv_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "displs"
                    , "recvtype"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("sendcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iallgatherv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iallgatherv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Allreduce", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Allreduce_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Allreduce_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Allreduce", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iallreduce", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iallreduce_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iallreduce_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iallreduce", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Alltoall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Alltoall_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Alltoall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Alltoall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ialltoall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ialltoall_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ialltoall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ialltoall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Alltoallv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Alltoallv_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtype"
                    , "comm"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Alltoallv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Alltoallv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ialltoallv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ialltoallv_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtype"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ialltoallv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ialltoallv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Alltoallw", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Alltoallw_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtypes"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtypes"
                    , "comm"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Alltoallw_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Alltoallw", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ialltoallw", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ialltoallw_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtypes"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtypes"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ialltoallw_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ialltoallw", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Barrier", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Barrier_f08"
                  , ["comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Barrier_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Barrier", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ibarrier", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ibarrier_f08"
                  , ["comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ibarrier_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ibarrier", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Bcast", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Bcast_f08"
                  , ["buffer", "count", "datatype", "root", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buffer", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Bcast_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Bcast", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ibcast", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ibcast_f08"
                  , ["buffer", "count", "datatype", "root", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buffer", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ibcast_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ibcast", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Exscan", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Exscan_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Exscan_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Exscan", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iexscan", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iexscan_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iexscan_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iexscan", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Gather", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Gather_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "root", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Gather_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Gather", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Igather", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Igather_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcount"
                    , "recvtype"
                    , "root"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Igather_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Igather", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Gatherv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Gatherv_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "displs"
                    , "recvtype"
                    , "root"
                    , "comm"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Gatherv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Gatherv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Igatherv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Igatherv_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "displs"
                    , "recvtype"
                    , "root"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Igatherv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Igatherv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Op_commutative", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Op_commutative_f08"
                  , ["op", "commute", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Op"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("commute", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Op_commutative_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Op_commutative", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Op_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Op_create_f08"
                  , ["user_fn", "commute", "op", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Op"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_User_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_User_function"
                      , []
                      , [ProcDecl("user_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("commute", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(OUT())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Op_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Op_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Op_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Op_free_f08"
                  , ["op", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Op"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Op_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Op_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Reduce", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Reduce_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "root", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Reduce_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Reduce", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ireduce", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ireduce_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "root", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ireduce_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ireduce", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Reduce_local", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Reduce_local_f08"
                  , ["inbuf", "inoutbuf", "count", "datatype", "op", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("inbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("inoutbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Reduce_local_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Reduce_local", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Reduce_scatter", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Reduce_scatter_f08"
                  , ["sendbuf", "recvbuf", "recvcounts", "datatype", "op", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Reduce_scatter_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Reduce_scatter", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ireduce_scatter", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ireduce_scatter_f08"
                  , ["sendbuf", "recvbuf", "recvcounts", "datatype", "op", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ireduce_scatter_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ireduce_scatter", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Reduce_scatter_block", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Reduce_scatter_block_f08"
                  , ["sendbuf", "recvbuf", "recvcount", "datatype", "op", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("recvcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Reduce_scatter_block_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Reduce_scatter_block", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ireduce_scatter_block", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ireduce_scatter_block_f08"
                  , ["sendbuf", "recvbuf", "recvcount", "datatype", "op", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("recvcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ireduce_scatter_block_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ireduce_scatter_block", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Scan", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Scan_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Scan_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Scan", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iscan", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iscan_f08"
                  , ["sendbuf", "recvbuf", "count", "datatype", "op", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iscan_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iscan", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Scatter", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Scatter_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "root", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Scatter_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Scatter", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iscatter", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iscatter_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcount"
                    , "recvtype"
                    , "root"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iscatter_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iscatter", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Scatterv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Scatterv_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "displs"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcount"
                    , "recvtype"
                    , "root"
                    , "comm"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Scatterv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Scatterv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Iscatterv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Iscatterv_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "displs"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcount"
                    , "recvtype"
                    , "root"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Iscatterv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Iscatterv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_compare", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_compare_f08"
                  , ["comm1", "comm2", "result", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm1", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm2", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("result", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_compare_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_compare", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_create_f08"
                  , ["comm", "group", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_create_group", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_create_group_f08"
                  , ["comm", "group", "tag", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("tag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_create_group_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_create_group", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_create_keyval", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_create_keyval_f08"
                  , ["comm_copy_attr_fn", "comm_delete_attr_fn", "comm_keyval", "extra_state", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Comm_copy_attr_function"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Comm_delete_attr_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Comm_copy_attr_function"
                      , []
                      , [ProcDecl("comm_copy_attr_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Comm_delete_attr_function"
                      , []
                      , [ProcDecl("comm_delete_attr_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("comm_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("extra_state", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_create_keyval_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_create_keyval", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_delete_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_delete_attr_f08"
                  , ["comm", "comm_keyval", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("comm_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_delete_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_delete_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_dup", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_dup_f08"
                  , ["comm", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_dup_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_dup", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_dup_with_info", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_dup_with_info_f08"
                  , ["comm", "info", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_dup_with_info_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_dup_with_info", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_idup", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_idup_f08"
                  , ["comm", "newcomm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_idup_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_idup", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_free_f08"
                  , ["comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_free_keyval", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_free_keyval_f08"
                  , ["comm_keyval", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(INOUT())]
                      , [EntityDecl("comm_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_free_keyval_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_free_keyval", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_get_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_get_attr_f08"
                  , ["comm", "comm_keyval", "attribute_val", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("comm_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("attribute_val", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_get_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_get_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_get_info", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_get_info_f08"
                  , ["comm", "info_used", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(OUT())]
                      , [EntityDecl("info_used", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_get_info_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_get_info", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_get_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_get_name_f08"
                  , ["comm", "comm_name", "resultlen", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_MAX_OBJECT_NAME"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_OBJECT_NAME"))))
                      , [Intent(OUT())]
                      , [EntityDecl("comm_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("resultlen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_get_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_get_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_group", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_group_f08"
                  , ["comm", "group", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_group_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_group", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_rank", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_rank_f08"
                  , ["comm", "rank", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_rank_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_rank", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_remote_group", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_remote_group_f08"
                  , ["comm", "group", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_remote_group_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_remote_group", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_remote_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_remote_size_f08"
                  , ["comm", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_remote_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_remote_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_set_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_set_attr_f08"
                  , ["comm", "comm_keyval", "attribute_val", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("comm_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("attribute_val", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_set_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_set_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_set_info", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_set_info_f08"
                  , ["comm", "info", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_set_info_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_set_info", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_set_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_set_name_f08"
                  , ["comm", "comm_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("comm_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_set_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_set_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_size_f08"
                  , ["comm", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_split", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_split_f08"
                  , ["comm", "color", "key", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("color", [], [], no-char-length(), no-init())
                        , EntityDecl("key", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_split_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_split", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_test_inter", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_test_inter_f08"
                  , ["comm", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_test_inter_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_test_inter", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_compare", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_compare_f08"
                  , ["group1", "group2", "result", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [ EntityDecl("group1", [], [], no-char-length(), no-init())
                        , EntityDecl("group2", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("result", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_compare_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_compare", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_difference", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_difference_f08"
                  , ["group1", "group2", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [ EntityDecl("group1", [], [], no-char-length(), no-init())
                        , EntityDecl("group2", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_difference_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_difference", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_excl", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_excl_f08"
                  , ["group", "n", "ranks", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("n", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "ranks"
                          , [DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_excl_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_excl", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_free_f08"
                  , ["group", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_incl", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_incl_f08"
                  , ["group", "n", "ranks", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("n", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "ranks"
                          , [DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_incl_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_incl", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_intersection", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_intersection_f08"
                  , ["group1", "group2", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [ EntityDecl("group1", [], [], no-char-length(), no-init())
                        , EntityDecl("group2", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_intersection_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_intersection", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_range_excl", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_range_excl_f08"
                  , ["group", "n", "ranges", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("n", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "ranges"
                          , [DimSpec(no-lower-bound(), "3"), DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_range_excl_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_range_excl", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_range_incl", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_range_incl_f08"
                  , ["group", "n", "ranges", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("n", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "ranges"
                          , [DimSpec(no-lower-bound(), "3"), DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_range_incl_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_range_incl", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_rank", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_rank_f08"
                  , ["group", "rank", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_rank_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_rank", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_size_f08"
                  , ["group", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_translate_ranks", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_translate_ranks_f08"
                  , ["group1", "n", "ranks1", "group2", "ranks2", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [ EntityDecl("group1", [], [], no-char-length(), no-init())
                        , EntityDecl("group2", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("n", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "ranks1"
                          , [DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "ranks2"
                          , [DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_translate_ranks_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_translate_ranks", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Group_union", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Group_union_f08"
                  , ["group1", "group2", "newgroup", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [ EntityDecl("group1", [], [], no-char-length(), no-init())
                        , EntityDecl("group2", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newgroup", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Group_union_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Group_union", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Intercomm_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Intercomm_create_f08"
                  , ["local_comm", "local_leader", "peer_comm", "remote_leader", "tag", "newintercomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [ EntityDecl("local_comm", [], [], no-char-length(), no-init())
                        , EntityDecl("peer_comm", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("local_leader", [], [], no-char-length(), no-init())
                        , EntityDecl("remote_leader", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newintercomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Intercomm_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Intercomm_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Intercomm_merge", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Intercomm_merge_f08"
                  , ["intercomm", "high", "newintracomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("intercomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("high", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newintracomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Intercomm_merge_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Intercomm_merge", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_keyval", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_keyval_f08"
                  , ["type_copy_attr_fn", "type_delete_attr_fn", "type_keyval", "extra_state", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Type_copy_attr_function"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Type_delete_attr_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Type_copy_attr_function"
                      , []
                      , [ProcDecl("type_copy_attr_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Type_delete_attr_function"
                      , []
                      , [ProcDecl("type_delete_attr_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("type_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("extra_state", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_keyval_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_keyval", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_delete_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_delete_attr_f08"
                  , ["datatype", "type_keyval", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("type_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_delete_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_delete_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_free_keyval", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_free_keyval_f08"
                  , ["type_keyval", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(INOUT())]
                      , [EntityDecl("type_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_free_keyval_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_free_keyval", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_attr_f08"
                  , ["datatype", "type_keyval", "attribute_val", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("type_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("attribute_val", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_get_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_get_name_f08"
                  , ["datatype", "type_name", "resultlen", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_MAX_OBJECT_NAME"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_OBJECT_NAME"))))
                      , [Intent(OUT())]
                      , [EntityDecl("type_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("resultlen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_get_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_get_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_set_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_set_attr_f08"
                  , ["datatype", "type_keyval", "attribute_val", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("type_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("attribute_val", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_set_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_set_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_set_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_set_name_f08"
                  , ["datatype", "type_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("type_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_set_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_set_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_allocate", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_allocate_f08"
                  , ["size", "disp_unit", "info", "comm", "baseptr", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n  ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , ModuleNature(INTRINSIC())
                      , "ISO_C_BINDING"
                      , OnlyList(["C_PTR"])
                      , eos("\n  ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("disp_unit", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("C_PTR", [])
                      , [Intent(OUT())]
                      , [EntityDecl("baseptr", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(OUT())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_allocate_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_allocate", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_allocate_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_allocate_shared_f08"
                  , ["size", "disp_unit", "info", "comm", "baseptr", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n  ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , ModuleNature(INTRINSIC())
                      , "ISO_C_BINDING"
                      , OnlyList(["C_PTR"])
                      , eos("\n  ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("disp_unit", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("C_PTR", [])
                      , [Intent(OUT())]
                      , [EntityDecl("baseptr", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(OUT())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_allocate_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_allocate_shared", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_create_keyval", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_create_keyval_f08"
                  , ["win_copy_attr_fn", "win_delete_attr_fn", "win_keyval", "extra_state", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Win_copy_attr_function"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Win_delete_attr_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Win_copy_attr_function"
                      , []
                      , [ProcDecl("win_copy_attr_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Win_delete_attr_function"
                      , []
                      , [ProcDecl("win_delete_attr_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("win_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("extra_state", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_create_keyval_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_create_keyval", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_delete_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_delete_attr_f08"
                  , ["win", "win_keyval", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("win_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_delete_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_delete_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_free_keyval", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_free_keyval_f08"
                  , ["win_keyval", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(INOUT())]
                      , [EntityDecl("win_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_free_keyval_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_free_keyval", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_get_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_get_attr_f08"
                  , ["win", "win_keyval", "attribute_val", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("win_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("attribute_val", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_get_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_get_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_get_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_get_name_f08"
                  , ["win", "win_name", "resultlen", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_MAX_OBJECT_NAME"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_OBJECT_NAME"))))
                      , [Intent(OUT())]
                      , [EntityDecl("win_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("resultlen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_get_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_get_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_set_attr", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_set_attr_f08"
                  , ["win", "win_keyval", "attribute_val", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("win_keyval", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("attribute_val", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_set_attr_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_set_attr", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_set_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_set_name_f08"
                  , ["win", "win_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("win_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_set_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_set_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cartdim_get", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cartdim_get_f08"
                  , ["comm", "ndims", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("ndims", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cartdim_get_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cartdim_get", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_coords", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_coords_f08"
                  , ["comm", "rank", "maxdims", "coords", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("rank", [], [], no-char-length(), no-init())
                        , EntityDecl("maxdims", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "coords"
                          , [DimSpec(no-lower-bound(), VarRef("maxdims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_coords_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_coords", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_create_f08"
                  , ["comm_old", "ndims", "dims", "periods", "reorder", "comm_cart", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm_old", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("ndims", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "dims"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "periods"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl("reorder", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("comm_cart", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_get", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_get_f08"
                  , ["comm", "maxdims", "dims", "periods", "coords", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("maxdims", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "dims"
                          , [DimSpec(no-lower-bound(), VarRef("maxdims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "coords"
                          , [DimSpec(no-lower-bound(), VarRef("maxdims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "periods"
                          , [DimSpec(no-lower-bound(), VarRef("maxdims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_get_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_get", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_map", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_map_f08"
                  , ["comm", "ndims", "dims", "periods", "newrank", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("ndims", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "dims"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "periods"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("newrank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_map_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_map", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_rank", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_rank_f08"
                  , ["comm", "coords", "rank", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("coords", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_rank_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_rank", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_shift", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_shift_f08"
                  , ["comm", "direction", "disp", "rank_source", "rank_dest", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("direction", [], [], no-char-length(), no-init())
                        , EntityDecl("disp", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("rank_source", [], [], no-char-length(), no-init())
                        , EntityDecl("rank_dest", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_shift_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_shift", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Cart_sub", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Cart_sub_f08"
                  , ["comm", "remain_dims", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("remain_dims", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Cart_sub_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Cart_sub", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Dims_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Dims_create_f08"
                  , ["nnodes", "ndims", "dims", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("nnodes", [], [], no-char-length(), no-init())
                        , EntityDecl("ndims", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(INOUT())]
                      , [ EntityDecl(
                            "dims"
                          , [DimSpec(no-lower-bound(), VarRef("ndims"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Dims_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Dims_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Dist_graph_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Dist_graph_create_f08"
                  , [ "comm_old"
                    , "n"
                    , "sources"
                    , "degrees"
                    , "destinations"
                    , "weights"
                    , "info"
                    , "reorder"
                    , "comm_dist_graph"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm_old", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("n", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "sources"
                          , [DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "degrees"
                          , [DimSpec(no-lower-bound(), VarRef("n"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl("destinations", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("weights", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("reorder", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("comm_dist_graph", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Dist_graph_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Dist_graph_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Dist_graph_create_adjacent", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Dist_graph_create_adjacent_f08"
                  , [ "comm_old"
                    , "indegree"
                    , "sources"
                    , "sourceweights"
                    , "outdegree"
                    , "destinations"
                    , "destweights"
                    , "info"
                    , "reorder"
                    , "comm_dist_graph"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm_old", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("indegree", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "sources"
                          , [DimSpec(no-lower-bound(), VarRef("indegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl("outdegree", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "destinations"
                          , [DimSpec(no-lower-bound(), VarRef("outdegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl(
                            "sourceweights"
                          , [DimSpec(no-lower-bound(), VarRef("indegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "destweights"
                          , [DimSpec(no-lower-bound(), VarRef("outdegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("reorder", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("comm_dist_graph", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Dist_graph_create_adjacent_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Dist_graph_create_adjacent", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Dist_graph_neighbors", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Dist_graph_neighbors_f08"
                  , ["comm", "maxindegree", "sources", "sourceweights", "maxoutdegree", "destinations", "destweights", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("maxindegree", [], [], no-char-length(), no-init())
                        , EntityDecl("maxoutdegree", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "sources"
                          , [DimSpec(no-lower-bound(), VarRef("maxindegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "destinations"
                          , [DimSpec(no-lower-bound(), VarRef("maxoutdegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "sourceweights"
                          , [DimSpec(no-lower-bound(), VarRef("maxindegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "destweights"
                          , [DimSpec(no-lower-bound(), VarRef("maxoutdegree"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Dist_graph_neighbors_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Dist_graph_neighbors", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Dist_graph_neighbors_count", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Dist_graph_neighbors_count_f08"
                  , ["comm", "indegree", "outdegree", "weighted", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("indegree", [], [], no-char-length(), no-init())
                        , EntityDecl("outdegree", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("weighted", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Dist_graph_neighbors_count_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Dist_graph_neighbors_count", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Graphdims_get", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Graphdims_get_f08"
                  , ["comm", "nnodes", "nedges", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("nnodes", [], [], no-char-length(), no-init())
                        , EntityDecl("nedges", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Graphdims_get_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Graphdims_get", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Graph_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Graph_create_f08"
                  , ["comm_old", "nnodes", "index", "edges", "reorder", "comm_graph", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm_old", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("nnodes", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "index"
                          , [DimSpec(no-lower-bound(), VarRef("nnodes"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl("edges", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("reorder", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("comm_graph", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Graph_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Graph_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Graph_get", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Graph_get_f08"
                  , ["comm", "maxindex", "maxedges", "index", "edges", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("maxindex", [], [], no-char-length(), no-init())
                        , EntityDecl("maxedges", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "index"
                          , [DimSpec(no-lower-bound(), VarRef("maxindex"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl(
                            "edges"
                          , [DimSpec(no-lower-bound(), VarRef("maxedges"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Graph_get_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Graph_get", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Graph_map", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Graph_map_f08"
                  , ["comm", "nnodes", "index", "edges", "newrank", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("nnodes", [], [], no-char-length(), no-init())
                        , EntityDecl(
                            "index"
                          , [DimSpec(no-lower-bound(), VarRef("nnodes"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        , EntityDecl("edges", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("newrank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Graph_map_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Graph_map", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Graph_neighbors", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Graph_neighbors_f08"
                  , ["comm", "rank", "maxneighbors", "neighbors", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("rank", [], [], no-char-length(), no-init())
                        , EntityDecl("maxneighbors", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl(
                            "neighbors"
                          , [DimSpec(no-lower-bound(), VarRef("maxneighbors"))]
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Graph_neighbors_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Graph_neighbors", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Graph_neighbors_count", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Graph_neighbors_count_f08"
                  , ["comm", "rank", "nneighbors", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("nneighbors", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Graph_neighbors_count_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Graph_neighbors_count", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Topo_test", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Topo_test_f08"
                  , ["comm", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Topo_test_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Topo_test", eos("\n\n! MPI_Wtick is not a wrapper function\n!\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Wtick", eos("\n"))
            , [ InterfaceBody(
                  FunctionStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Wtick_f08"
                  , []
                  , OfpSuffix([LanguageBindingSpec("MPI_Wtick"), no-result-name()])
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseStmt(no-label(), ModuleNature(INTRINSIC()), "ISO_C_BINDING", [], eos("\n   "))
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(DOUBLEPRECISION(no-kind()))
                      , []
                      , [EntityDecl("MPI_Wtick_f08", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndFunctionStmt(no-label(), "MPI_Wtick_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Wtick", eos("\n\n! MPI_Wtime is not a wrapper function\n!\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Wtime", eos("\n"))
            , [ InterfaceBody(
                  FunctionStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Wtime_f08"
                  , []
                  , OfpSuffix([LanguageBindingSpec("MPI_Wtime"), no-result-name()])
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseStmt(no-label(), ModuleNature(INTRINSIC()), "ISO_C_BINDING", [], eos("\n   "))
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(DOUBLEPRECISION(no-kind()))
                      , []
                      , [EntityDecl("MPI_Wtime_f08", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndFunctionStmt(no-label(), "MPI_Wtime_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Wtime", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Abort", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Abort_f08"
                  , ["comm", "errorcode", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Abort_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Abort", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Add_error_class", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Add_error_class_f08"
                  , ["errorclass", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("errorclass", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Add_error_class_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Add_error_class", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Add_error_code", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Add_error_code_f08"
                  , ["errorclass", "errorcode", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorclass", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Add_error_code_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Add_error_code", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Add_error_string", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Add_error_string_f08"
                  , ["errorcode", "string", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("string", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Add_error_string_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Add_error_string", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Alloc_mem", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Alloc_mem_f08"
                  , ["size", "info", "baseptr", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , ModuleNature(INTRINSIC())
                      , "ISO_C_BINDING"
                      , OnlyList(["C_PTR"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("C_PTR", [])
                      , [Intent(OUT())]
                      , [EntityDecl("baseptr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Alloc_mem_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Alloc_mem", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_call_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_call_errhandler_f08"
                  , ["comm", "errorcode", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_call_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_call_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_create_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_create_errhandler_f08"
                  , ["comm_errhandler_fn", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Comm_errhandler_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Comm_errhandler_function"
                      , []
                      , [ProcDecl("comm_errhandler_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(OUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_create_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_create_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_get_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_get_errhandler_f08"
                  , ["comm", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(OUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_get_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_get_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_set_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_set_errhandler_f08"
                  , ["comm", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(IN())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_set_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_set_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Errhandler_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Errhandler_free_f08"
                  , ["errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Errhandler_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Errhandler_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Error_class", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Error_class_f08"
                  , ["errorcode", "errorclass", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("errorclass", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Error_class_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Error_class", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Error_string", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Error_string_f08"
                  , ["errorcode", "string", "resultlen", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_MAX_ERROR_STRING"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_ERROR_STRING"))))
                      , [Intent(OUT())]
                      , [EntityDecl("string", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("resultlen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Error_string_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Error_string", eos("\n\n#if OMPI_PROVIDE_MPI_FILE_INTERFACE\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_call_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_call_errhandler_f08"
                  , ["fh", "errorcode", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_call_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_call_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_create_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_create_errhandler_f08"
                  , ["file_errhandler_fn", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_File_errhandler_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_File_errhandler_function"
                      , []
                      , [ProcDecl("file_errhandler_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(OUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_create_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_create_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_errhandler_f08"
                  , ["file", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("file", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(OUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_set_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_set_errhandler_f08"
                  , ["file", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("file", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(IN())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_set_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_set_errhandler", eos("\n\n! endif for OMPI_PROVIDE_MPI_FILE_INTERFACE\n#endif\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Finalize", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Finalize_f08"
                  , ["ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Finalize_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Finalize", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Finalized", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Finalized_f08"
                  , ["flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Finalized_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Finalized", eos("\n\n! ASYNCHRONOUS had to removed from the base argument because\n! the dummy argument is not an assumed-shape array.  This will\n! be okay once the Interop TR is implemented.\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Free_mem", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Free_mem_f08"
                  , ["base", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n!   INTEGER(MPI_ADDRESS_KIND), DIMENSION(*) OMPI_ASYNCHRONOUS :: base\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Dimension(AssumedOrImpliedSpec(no-lower-bound()))]
                      , [EntityDecl("base", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Free_mem_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Free_mem", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_processor_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_processor_name_f08"
                  , ["name", "resultlen", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_MAX_PROCESSOR_NAME"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_PROCESSOR_NAME"))))
                      , [Intent(OUT())]
                      , [EntityDecl("name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("resultlen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_processor_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_processor_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_version", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_version_f08"
                  , ["version", "subversion", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [ EntityDecl("version", [], [], no-char-length(), no-init())
                        , EntityDecl("subversion", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_version_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_version", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Init", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Init_f08"
                  , ["ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Init_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Init", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Initialized", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Initialized_f08"
                  , ["flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Initialized_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Initialized", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_call_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_call_errhandler_f08"
                  , ["win", "errorcode", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("errorcode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_call_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_call_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_create_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_create_errhandler_f08"
                  , ["win_errhandler_fn", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Win_errhandler_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Win_errhandler_function"
                      , []
                      , [ProcDecl("win_errhandler_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(OUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_create_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_create_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_get_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_get_errhandler_f08"
                  , ["win", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(OUT())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_get_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_get_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_set_errhandler", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_set_errhandler_f08"
                  , ["win", "errhandler", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_Errhandler"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Errhandler", [])
                      , [Intent(IN())]
                      , [EntityDecl("errhandler", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_set_errhandler_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_set_errhandler", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_create_f08"
                  , ["info", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(OUT())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_delete", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_delete_f08"
                  , ["info", "key", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("key", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_delete_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_delete", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_dup", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_dup_f08"
                  , ["info", "newinfo", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newinfo", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_dup_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_dup", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_free_f08"
                  , ["info", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_get", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_get_f08"
                  , ["info", "key", "valuelen", "value", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("key", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("valuelen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("valuelen"))))
                      , [Intent(OUT())]
                      , [EntityDecl("value", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_get_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_get", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_get_nkeys", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_get_nkeys_f08"
                  , ["info", "nkeys", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("nkeys", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_get_nkeys_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_get_nkeys", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_get_nthkey", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_get_nthkey_f08"
                  , ["info", "n", "key", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("n", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(OUT())]
                      , [EntityDecl("key", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_get_nthkey_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_get_nthkey", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_get_valuelen", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_get_valuelen_f08"
                  , ["info", "key", "valuelen", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("key", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("valuelen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_get_valuelen_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_get_valuelen", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Info_set", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Info_set_f08"
                  , ["info", "key", "value", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [ EntityDecl("key", [], [], no-char-length(), no-init())
                        , EntityDecl("value", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Info_set_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Info_set", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Close_port", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Close_port_f08"
                  , ["port_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("port_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Close_port_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Close_port", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_accept", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_accept_f08"
                  , ["port_name", "info", "root", "comm", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("port_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("root", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_accept_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_accept", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_connect", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_connect_f08"
                  , ["port_name", "info", "root", "comm", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("port_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("root", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_connect_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_connect", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_disconnect", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_disconnect_f08"
                  , ["comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_disconnect_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_disconnect", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_get_parent", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_get_parent_f08"
                  , ["parent", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("parent", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_get_parent_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_get_parent", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_join", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_join_f08"
                  , ["fd", "intercomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("fd", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("intercomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_join_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_join", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_spawn", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_spawn_f08"
                  , ["command", "argv", "maxprocs", "info", "root", "comm", "intercomm", "array_of_errcodes", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [ EntityDecl("command", [], [], no-char-length(), no-init())
                        , EntityDecl("argv", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("maxprocs", [], [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("intercomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , []
                      , [EntityDecl("array_of_errcodes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_spawn_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_spawn", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_spawn_multiple", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_spawn_multiple_f08"
                  , [ "count"
                    , "array_of_commands"
                    , "array_of_argv"
                    , "array_of_maxprocs"
                    , "array_of_info"
                    , "root"
                    , "comm"
                    , "intercomm"
                    , "array_of_errcodes"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("count", [], [], no-char-length(), no-init())
                        , EntityDecl("array_of_maxprocs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("root", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [ EntityDecl("array_of_commands", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl(
                            "array_of_argv"
                          , AssumedSize([DimSpec(no-lower-bound(), VarRef("count"))])
                          , []
                          , no-char-length()
                          , no-init()
                          )
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("array_of_info", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("intercomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , []
                      , [EntityDecl("array_of_errcodes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_spawn_multiple_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_spawn_multiple", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Lookup_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Lookup_name_f08"
                  , ["service_name", "info", "port_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_MAX_PORT_NAME"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("service_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_PORT_NAME"))))
                      , [Intent(OUT())]
                      , [EntityDecl("port_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Lookup_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Lookup_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Open_port", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Open_port_f08"
                  , ["info", "port_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_MAX_PORT_NAME"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_PORT_NAME"))))
                      , [Intent(OUT())]
                      , [EntityDecl("port_name", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Open_port_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Open_port", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Publish_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Publish_name_f08"
                  , ["service_name", "info", "port_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [ EntityDecl("service_name", [], [], no-char-length(), no-init())
                        , EntityDecl("port_name", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Publish_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Publish_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Unpublish_name", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Unpublish_name_f08"
                  , ["service_name", "info", "port_name", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [ EntityDecl("service_name", [], [], no-char-length(), no-init())
                        , EntityDecl("port_name", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Unpublish_name_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Unpublish_name", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Accumulate", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Accumulate_f08"
                  , [ "origin_addr"
                    , "origin_count"
                    , "origin_datatype"
                    , "target_rank"
                    , "target_disp"
                    , "target_count"
                    , "target_datatype"
                    , "op"
                    , "win"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Accumulate_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Accumulate", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Raccumulate", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Raccumulate_f08"
                  , [ "origin_addr"
                    , "origin_count"
                    , "origin_datatype"
                    , "target_rank"
                    , "target_disp"
                    , "target_count"
                    , "target_datatype"
                    , "op"
                    , "win"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Win", "MPI_Request", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Raccumulate_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Raccumulate", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_f08"
                  , ["origin_addr", "origin_count", "origin_datatype", "target_rank", "target_disp", "target_count", "target_datatype", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Rget", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Rget_f08"
                  , [ "origin_addr"
                    , "origin_count"
                    , "origin_datatype"
                    , "target_rank"
                    , "target_disp"
                    , "target_count"
                    , "target_datatype"
                    , "win"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Request", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Rget_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Rget", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_accumulate", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_accumulate_f08"
                  , [ "origin_addr"
                    , "origin_count"
                    , "origin_datatype"
                    , "result_addr"
                    , "result_count"
                    , "result_datatype"
                    , "target_rank"
                    , "target_disp"
                    , "target_count"
                    , "target_datatype"
                    , "op"
                    , "win"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("result_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("result_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("result_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_accumulate_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_accumulate", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Rget_accumulate", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Rget_accumulate_f08"
                  , [ "origin_addr"
                    , "origin_count"
                    , "origin_datatype"
                    , "result_addr"
                    , "result_count"
                    , "result_datatype"
                    , "target_rank"
                    , "target_disp"
                    , "target_count"
                    , "target_datatype"
                    , "op"
                    , "win"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Request", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("result_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("result_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("result_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Rget_accumulate_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Rget_accumulate", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Put", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Put_f08"
                  , ["origin_addr", "origin_count", "origin_datatype", "target_rank", "target_disp", "target_count", "target_datatype", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Put_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Put", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Rput", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Rput_f08"
                  , [ "origin_addr"
                    , "origin_count"
                    , "origin_datatype"
                    , "target_rank"
                    , "target_disp"
                    , "target_count"
                    , "target_datatype"
                    , "win"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Win", "MPI_Request", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("origin_count", [], [], no-char-length(), no-init())
                        , EntityDecl("target_rank", [], [], no-char-length(), no-init())
                        , EntityDecl("target_count", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("origin_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("target_datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Rput_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Rput", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Fetch_and_op", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Fetch_and_op_f08"
                  , ["origin_addr", "result_addr", "datatype", "target_rank", "target_disp", "op", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Op", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("origin_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("result_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("target_rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Op", [])
                      , [Intent(IN())]
                      , [EntityDecl("op", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Fetch_and_op_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Fetch_and_op", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Compare_and_swap", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Compare_and_swap_f08"
                  , ["origin_addr", "compare_addr", "result_addr", "datatype", "target_rank", "target_disp", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [ EntityDecl("origin_addr", [], [], no-char-length(), no-init())
                        , EntityDecl("compare_addr", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("result_addr", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("target_rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("target_disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Compare_and_swap_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Compare_and_swap", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_complete", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_complete_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_complete_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_complete", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_create", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_create_f08"
                  , ["base", "size", "disp_unit", "info", "comm", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info", "MPI_Comm", "MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("base", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("disp_unit", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(OUT())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_create_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_create", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_fence", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_fence_f08"
                  , ["assert", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("assert", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_fence_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_fence", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_free", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_free_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_free_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_free", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_get_group", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_get_group_f08"
                  , ["win", "group", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_get_group_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_get_group", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_lock", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_lock_f08"
                  , ["lock_type", "rank", "assert", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("lock_type", [], [], no-char-length(), no-init())
                        , EntityDecl("rank", [], [], no-char-length(), no-init())
                        , EntityDecl("assert", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_lock_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_lock", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_lock_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_lock_all_f08"
                  , ["assert", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("assert", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_lock_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_lock_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_post", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_post_f08"
                  , ["group", "assert", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group", "MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("assert", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_post_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_post", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_shared_query", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_shared_query_f08"
                  , ["win", "rank", "size", "disp_unit", "baseptr", "ierror"]
                  , no-language-binding()
                  , eos("\n  ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , ModuleNature(INTRINSIC())
                      , "ISO_C_BINDING"
                      , OnlyList(["C_PTR"])
                      , eos("\n  ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win", "MPI_ADDRESS_KIND"])
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("disp_unit", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("C_PTR", [])
                      , [Intent(OUT())]
                      , [EntityDecl("baseptr", [], [], no-char-length(), no-init())]
                      , eos("\n  ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_shared_query_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), no-generic-spec(), eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_start", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_start_f08"
                  , ["group", "assert", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group", "MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(IN())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("assert", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_start_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_start", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_sync", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_sync_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Group", "MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_sync_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_sync", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_test", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_test_f08"
                  , ["win", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_test_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_test", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_unlock", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_unlock_f08"
                  , ["rank", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_unlock_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_unlock", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_unlock_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_unlock_all_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_unlock_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_unlock_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_wait", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_wait_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_wait_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_wait", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_flush", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_flush_f08"
                  , ["rank", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_flush_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_flush", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_flush_local", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_flush_local_f08"
                  , ["rank", "win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("rank", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_flush_local_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_flush_local", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_flush_all_local", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_flush_all_local_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_flush_all_local_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_flush_all_local", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Win_flush_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Win_flush_all_f08"
                  , ["win", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Win"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Win", [])
                      , [Intent(IN())]
                      , [EntityDecl("win", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Win_flush_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Win_flush_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Grequest_complete", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Grequest_complete_f08"
                  , ["request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Grequest_complete_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Grequest_complete", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Grequest_start", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Grequest_start_f08"
                  , ["query_fn", "free_fn", "cancel_fn", "extra_state", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Request", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Grequest_query_function"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Grequest_free_function"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Grequest_cancel_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Grequest_query_function"
                      , []
                      , [ProcDecl("query_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Grequest_free_function"
                      , []
                      , [ProcDecl("free_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Grequest_cancel_function"
                      , []
                      , [ProcDecl("cancel_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("extra_state", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Grequest_start_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Grequest_start", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Init_thread", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Init_thread_f08"
                  , ["required", "provided", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("required", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("provided", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Init_thread_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Init_thread", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Is_thread_main", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Is_thread_main_f08"
                  , ["flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Is_thread_main_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Is_thread_main", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Query_thread", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Query_thread_f08"
                  , ["provided", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("provided", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Query_thread_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Query_thread", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Status_set_cancelled", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Status_set_cancelled_f08"
                  , ["status", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Status_set_cancelled_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Status_set_cancelled", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Status_set_elements", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Status_set_elements_f08"
                  , ["status", "datatype", "count", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Status_set_elements_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Status_set_elements", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Status_set_elements_x", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Status_set_elements_x_f08"
                  , ["status", "datatype", "count", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Status", "MPI_Datatype", "MPI_COUNT_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_COUNT_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Status_set_elements_x_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Status_set_elements_x", eos("\n\n#if OMPI_PROVIDE_MPI_FILE_INTERFACE\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_close", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_close_f08"
                  , ["fh", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_close_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_close", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_delete", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_delete_f08"
                  , ["filename", "info", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("filename", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_delete_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_delete", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_amode", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_amode_f08"
                  , ["fh", "amode", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("amode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_amode_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_amode", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_atomicity", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_atomicity_f08"
                  , ["fh", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_atomicity_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_atomicity", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_byte_offset", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_byte_offset_f08"
                  , ["fh", "offset", "disp", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_byte_offset_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_byte_offset", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_group", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_group_f08"
                  , ["fh", "group", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Group"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Group", [])
                      , [Intent(OUT())]
                      , [EntityDecl("group", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_group_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_group", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_info", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_info_f08"
                  , ["fh", "info_used", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(OUT())]
                      , [EntityDecl("info_used", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_info_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_info", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_position", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_position_f08"
                  , ["fh", "offset", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_position_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_position", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_position_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_position_shared_f08"
                  , ["fh", "offset", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_position_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_position_shared", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_size_f08"
                  , ["fh", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_type_extent", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_type_extent_f08"
                  , ["fh", "datatype", "extent", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("extent", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_type_extent_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_type_extent", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_get_view", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_get_view_f08"
                  , ["fh", "disp", "etype", "filetype", "datarep", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(OUT())]
                      , [EntityDecl("disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("etype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("filetype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(OUT())]
                      , [EntityDecl("datarep", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_get_view_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_get_view", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_iread", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_iread_f08"
                  , ["fh", "buf", "count", "datatype", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_iread_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_iread", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_iread_at", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_iread_at_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Request", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_iread_at_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_iread_at", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_iread_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_iread_shared_f08"
                  , ["fh", "buf", "count", "datatype", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_iread_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_iread_shared", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_iwrite", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_iwrite_f08"
                  , ["fh", "buf", "count", "datatype", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_iwrite_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_iwrite", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_iwrite_at", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_iwrite_at_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Request", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_iwrite_at_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_iwrite_at", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_iwrite_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_iwrite_shared_f08"
                  , ["fh", "buf", "count", "datatype", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_iwrite_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_iwrite_shared", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_open", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_open_f08"
                  , ["comm", "filename", "amode", "info", "fh", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info", "MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("filename", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("amode", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(OUT())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_open_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_open", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_preallocate", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_preallocate_f08"
                  , ["fh", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_preallocate_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_preallocate", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_all_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_all_begin", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_all_begin_f08"
                  , ["fh", "buf", "count", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_all_begin_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_all_begin", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_all_end", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_all_end_f08"
                  , ["fh", "buf", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_all_end_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_all_end", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_at", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_at_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_at_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_at", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_at_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_at_all_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_at_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_at_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_at_all_begin", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_at_all_begin_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_at_all_begin_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_at_all_begin", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_at_all_end", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_at_all_end_f08"
                  , ["fh", "buf", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_at_all_end_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_at_all_end", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_ordered", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_ordered_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_ordered_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_ordered", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_ordered_begin", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_ordered_begin_f08"
                  , ["fh", "buf", "count", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_ordered_begin_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_ordered_begin", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_ordered_end", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_ordered_end_f08"
                  , ["fh", "buf", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_ordered_end_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_ordered_end", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_read_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_read_shared_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_read_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_read_shared", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_seek", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_seek_f08"
                  , ["fh", "offset", "whence", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("whence", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_seek_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_seek", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_seek_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_seek_shared_f08"
                  , ["fh", "offset", "whence", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("whence", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_seek_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_seek_shared", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_set_atomicity", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_set_atomicity_f08"
                  , ["fh", "flag", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_set_atomicity_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_set_atomicity", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_set_info", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_set_info_f08"
                  , ["fh", "info", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_set_info_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_set_info", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_set_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_set_size_f08"
                  , ["fh", "size", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("size", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_set_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_set_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_set_view", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_set_view_f08"
                  , ["fh", "disp", "etype", "filetype", "datarep", "info", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Info", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("disp", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("etype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("filetype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("datarep", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_set_view_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_set_view", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_sync", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_sync_f08"
                  , ["fh", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_sync_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_sync", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_all_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_all_begin", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_all_begin_f08"
                  , ["fh", "buf", "count", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_all_begin_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_all_begin", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_all_end", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_all_end_f08"
                  , ["fh", "buf", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_all_end_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_all_end", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_at", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_at_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_at_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_at", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_at_all", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_at_all_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_at_all_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_at_all", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_at_all_begin", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_at_all_begin_f08"
                  , ["fh", "offset", "buf", "count", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_OFFSET_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_OFFSET_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("offset", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_at_all_begin_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_at_all_begin", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_at_all_end", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_at_all_end_f08"
                  , ["fh", "buf", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_at_all_end_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_at_all_end", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_ordered", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_ordered_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_ordered_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_ordered", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_ordered_begin", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_ordered_begin_f08"
                  , ["fh", "buf", "count", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_ordered_begin_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_ordered_begin", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_ordered_end", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_ordered_end_f08"
                  , ["fh", "buf", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_ordered_end_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_ordered_end", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_File_write_shared", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_File_write_shared_f08"
                  , ["fh", "buf", "count", "datatype", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_File", "MPI_Datatype", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_File", [])
                      , [Intent(IN())]
                      , [EntityDecl("fh", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_File_write_shared_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_File_write_shared", eos("\n\n! endif for OMPI_PROVIDE_MPI_FILE_INTERFACE\n#endif\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Register_datarep", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Register_datarep_f08"
                  , ["datarep", "read_conversion_fn", "write_conversion_fn", "dtype_file_extent_fn", "extra_state", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Datarep_conversion_function"])
                      , eos("\n   ")
                      )
                    , UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_interfaces_callbacks"
                      , OnlyList(["MPI_Datarep_extent_function"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(STAR())))
                      , [Intent(IN())]
                      , [EntityDecl("datarep", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Datarep_conversion_function"
                      , []
                      , [ProcDecl("read_conversion_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Datarep_conversion_function"
                      , []
                      , [ProcDecl("write_conversion_fn", no-init())]
                      , eos("\n   ")
                      )
                    , ProcedureDeclarationStmt(
                        no-label()
                      , "MPI_Datarep_extent_function"
                      , []
                      , [ProcDecl("dtype_file_extent_fn", no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [EntityDecl("extra_state", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Register_datarep_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Register_datarep", eos("\n\n!\n! MPI_Sizeof is generic for numeric types.  This ignore TKR interface\n! is replaced by the specific generics.  Implemented in mpi_sizeof_mod.F90.\n!\n!subroutine MPI_Sizeof(x,size,ierror)\n!   use :: mpi_f08_types\n!   implicit none\n!   TYPE(*), DIMENSION(..), INTENT(IN) :: x\n!   INTEGER, INTENT(OUT) :: size\n!   INTEGER, OPTIONAL, INTENT(OUT) :: ierror\n!end subroutine MPI_Sizeof\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_f90_complex", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_f90_complex_f08"
                  , ["p", "r", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("p", [], [], no-char-length(), no-init())
                        , EntityDecl("r", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_f90_complex_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_f90_complex", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_f90_integer", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_f90_integer_f08"
                  , ["r", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("r", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_f90_integer_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_f90_integer", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_create_f90_real", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_create_f90_real_f08"
                  , ["p", "r", "newtype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("p", [], [], no-char-length(), no-init())
                        , EntityDecl("r", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newtype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_create_f90_real_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_create_f90_real", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Type_match_size", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Type_match_size_f08"
                  , ["typeclass", "size", "datatype", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("typeclass", [], [], no-char-length(), no-init())
                        , EntityDecl("size", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(OUT())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Type_match_size_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Type_match_size", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Pcontrol", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Pcontrol_f08"
                  , ["level"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("level", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Pcontrol_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Pcontrol", eos("\n\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n! New routines to MPI-3\n!\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Comm_split_type", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Comm_split_type_f08"
                  , ["comm", "split_type", "key", "info", "newcomm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Info"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("split_type", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("key", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Info", [])
                      , [Intent(IN())]
                      , [EntityDecl("info", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(OUT())]
                      , [EntityDecl("newcomm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Comm_split_type_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Comm_split_type", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_F_sync_reg", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_F_sync_reg_f08"
                  , ["buf"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_F_sync_reg_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_F_sync_reg", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Get_library_version", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Get_library_version_f08"
                  , ["version", "resultlen", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_MAX_LIBRARY_VERSION_STRING"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(CHARACTER(LengthSelector(VarRef("MPI_MAX_LIBRARY_VERSION_STRING"))))
                      , [Intent(OUT())]
                      , [EntityDecl("version", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("resultlen", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Get_library_version_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Get_library_version", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Mprobe", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Mprobe_f08"
                  , ["source", "tag", "comm", "message", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Message", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Message", [])
                      , [Intent(OUT())]
                      , [EntityDecl("message", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(OUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Mprobe_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Mprobe", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Improbe", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Improbe_f08"
                  , ["source", "tag", "comm", "flag", "message", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Comm", "MPI_Message", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("source", [], [], no-char-length(), no-init())
                        , EntityDecl("tag", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(LOGICAL(no-kind()))
                      , [Intent(OUT())]
                      , [EntityDecl("flag", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Message", [])
                      , [Intent(OUT())]
                      , [EntityDecl("message", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , [Intent(OUT())]
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Improbe_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Improbe", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Imrecv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Imrecv_f08"
                  , ["buf", "count", "datatype", "message", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Message", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Message", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("message", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Imrecv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Imrecv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Mrecv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Mrecv_f08"
                  , ["buf", "count", "datatype", "message", "status", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Message", "MPI_Status"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("buf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("count", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [EntityDecl("datatype", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Message", [])
                      , [Intent(INOUT())]
                      , [EntityDecl("message", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Status", [])
                      , []
                      , [EntityDecl("status", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Mrecv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Mrecv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Neighbor_allgather", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Neighbor_allgather_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Neighbor_allgather_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Neighbor_allgather", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ineighbor_allgather", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ineighbor_allgather_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ineighbor_allgather_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ineighbor_allgather", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Neighbor_allgatherv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Neighbor_allgatherv_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcounts", "displs", "recvtype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("sendcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Neighbor_allgatherv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Neighbor_allgatherv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ineighbor_allgatherv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ineighbor_allgatherv_f08"
                  , [ "sendbuf"
                    , "sendcount"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "displs"
                    , "recvtype"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [EntityDecl("sendcount", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("displs", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ineighbor_allgatherv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ineighbor_allgatherv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Neighbor_alltoall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Neighbor_alltoall_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Neighbor_alltoall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Neighbor_alltoall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ineighbor_alltoall", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ineighbor_alltoall_f08"
                  , ["sendbuf", "sendcount", "sendtype", "recvbuf", "recvcount", "recvtype", "comm", "request", "ierror"]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcount", [], [], no-char-length(), no-init())
                        , EntityDecl("recvcount", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(OUT())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ineighbor_alltoall_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ineighbor_alltoall", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Neighbor_alltoallv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Neighbor_alltoallv_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtype"
                    , "comm"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Neighbor_alltoallv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Neighbor_alltoallv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ineighbor_alltoallv", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ineighbor_alltoallv_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtype"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtype"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtype", [], [], no-char-length(), no-init())
                        , EntityDecl("recvtype", [], [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ineighbor_alltoallv_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ineighbor_alltoallv", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Neighbor_alltoallw", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Neighbor_alltoallw_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtypes"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtypes"
                    , "comm"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [ EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Neighbor_alltoallw_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Neighbor_alltoallw", eos("\n\n"))
            )
          , InterfaceBlock(
              InterfaceStmt(no-label(), "MPI_Ineighbor_alltoallw", eos("\n"))
            , [ InterfaceBody(
                  SubroutineStmt(
                    no-label()
                  , no-prefix()
                  , "MPI_Ineighbor_alltoallw_f08"
                  , [ "sendbuf"
                    , "sendcounts"
                    , "sdispls"
                    , "sendtypes"
                    , "recvbuf"
                    , "recvcounts"
                    , "rdispls"
                    , "recvtypes"
                    , "comm"
                    , "request"
                    , "ierror"
                    ]
                  , no-language-binding()
                  , eos("\n   ")
                  )
                , OfpSpecPart(
                    [ UseOnlyStmt(
                        no-label()
                      , no-module-nature()
                      , "mpi_f08_types"
                      , OnlyList(["MPI_Datatype", "MPI_Comm", "MPI_Request", "MPI_ADDRESS_KIND"])
                      , eos("\n   ")
                      )
                    , ImplicitNoneStmt(no-label(), eos("\n   "))
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank()), Intent(IN())]
                      , [EntityDecl("sendbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , AssumedType()
                      , [Dimension(AssumedRank())]
                      , [EntityDecl("recvbuf", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [Intent(IN())]
                      , [ EntityDecl("sendcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvcounts", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(KindSelector(VarRef("MPI_ADDRESS_KIND"))))
                      , [Intent(IN())]
                      , [ EntityDecl("sdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("rdispls", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Datatype", [])
                      , [Intent(IN())]
                      , [ EntityDecl("sendtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        , EntityDecl("recvtypes", AssumedOrImpliedSpec(no-lower-bound()), [], no-char-length(), no-init())
                        ]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Comm", [])
                      , [Intent(IN())]
                      , [EntityDecl("comm", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , DerivedType("MPI_Request", [])
                      , [Intent(IN())]
                      , [EntityDecl("request", [], [], no-char-length(), no-init())]
                      , eos("\n   ")
                      )
                    , TypeDeclarationStmt(
                        no-label()
                      , IntrinsicType(INTEGER(no-kind()))
                      , [OPTIONAL(), Intent(OUT())]
                      , [EntityDecl("ierror", [], [], no-char-length(), no-init())]
                      , eos("\n")
                      )
                    ]
                  )
                , EndSubroutineStmt(no-label(), "MPI_Ineighbor_alltoallw_f08", eos("\n"))
                )
              ]
            , EndInterfaceStmt(no-label(), "MPI_Ineighbor_alltoallw", eos("\n\n"))
            )
          ]
        )
      , OfpExecPart([])
      , OfpFuncPart([])
      , ModuleStmt(no-label(), "mpi_f08_interfaces", eos("\n\n"))
      , None()
      , EndModuleStmt(no-label(), "mpi_f08_interfaces", eos("\n"))
      )
    )
  ]
)
